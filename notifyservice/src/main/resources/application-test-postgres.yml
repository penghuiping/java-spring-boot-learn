########################################################
###common
########################################################
app:
  db:
    ip: localhost
    port: 5432
    username: admin
    password: admin
    name: test
  rabbitmq:
    ip: localhost
    port: 5672
    username: admin
    password: admin
    virtualHost: /
  redis:
    host: localhost
    port: 6379
    nodes:
    password:
    database: 0
  filesever:
    host: /
    path: /
  mail:
    host: ${mail_host}
    username: ${mail_username}
    password: ${mail_password}
  zipkin:
    host: localhost
    port: 9411
  eureka:
    host: localhost
    port: 8761
  logstash:
    host: localhost
    port: 1111
spring:
  ########################################################
  ###datasource
  ########################################################
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${app.db.ip}:${app.db.port}/${app.db.name}?currentSchema=public
    username: ${app.db.username}
    password: ${app.db.password}
    initSize: 1
    minIdle: 1
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select version();
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    publicKey:
    decrypt: false
  ########################################################
  ### spring cloud stream
  ########################################################
  rabbitmq:
    addresses: ${app.rabbitmq.ip}
    port: ${app.rabbitmq.port}
    username: ${app.rabbitmq.username}
    password: ${app.rabbitmq.password}
    virtual-host: ${app.rabbitmq.virtualHost}
  cloud:
    stream:
      bindings:
        input:
          group: one
          destination: data-exchange
          contentType: application/json
          consumer:
            max-attempts: 3
        output:
          destination: data-exchange
          contentType: application/json
      ## 下面配置的是rabbit的专用属性,用于设置dlq
      rabbit:
        bindings:
          input:
            consumer:
              acknowledgeMode: AUTO
              auto-bind-dlq: true
              republish-to-dlq: true
      instance-count: 3
  ########################################################
  ### redis
  ########################################################
  redis:
    host: ${app.redis.host}
    port: ${app.redis.port}
    database: ${app.redis.database}
    ssl: false
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1s
        min-idle: 0
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1s
        min-idle: 0
    timeout: 5s
  #    cluster:
  #      max-redirects: 3
  #      nodes: 10.186.123.159:7380,10.186.123.159:7381,10.186.123.188:7380
  #    sentinel:
  #      master: master
  #      nodes: 10.182.175.63:26380,10.182.175.64:26380
  #    password: ${app.redis.password}
  ########################################################
  ### 调用链监控
  ########################################################
  zipkin:
    base-url: http://${app.zipkin.host}:${app.zipkin.port}
    service.name: springcloudlearn-notifyservice
    sender.type: web
  sleuth:
    sampler:
      probability: 1.0
      rate: 50
    traceId128: true
    opentracing:
      enabled: true
    web:
      client:
        enabled: true
    enabled: true
  ########################################################
  ### fileupload
  ########################################################
  servlet:
    multipart:
      max-file-size: 10000
      max-request-size: 1000000
  ########################################################
  ### mail
  ########################################################
  mail:
    host: ${app.mail.host}
    username: ${app.mail.username}
    password: ${app.mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
########################################################
### metrics监控
########################################################
management:
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 8101
########################################################
### logstash 集中日志
########################################################
logstash:
  ip: ${app.logstash.host}
  port: ${app.logstash.port}
########################################################
### LOG
########################################################
logging:
  file: /tmp/logs/notifyservice.log
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.jdbc: debug
    org.hibernate: INFO
    com.php25: INFO
  config: classpath:logback-test.xml
###############################################
## apollo配置中心
###############################################
apollo:
  bootstrap:
    enabled: true
    eagerLoad.enabled: true
    namespaces: application-test
  cacheDir: /data/apollo-cache
  meta: http://localhost:8080
###############################################
## eureka注册中心配置
##############################################
eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka.host}:${app.eureka.port}/eureka/
    enabled: true
    healthcheck:
      enabled: true
    registerWithEureka: false
  instance:
    prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 5
########################################################
### static resources and upload load file
########################################################
base_assets_url: http://${app.filesever.host}/${spring.application.name}/assets/
base_assets_upload_path: ${app.filesever.path}/${spring.application.name}/upload/
base_assets_upload_url: http://${app.filesever.host}/${spring.application.name}/upload/
########################################################
### jwt rsa
########################################################
jwt:
  publicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyEt5T3Y9SFqA1HY0Wo1aHgnHekd1+KHz1pQVS4NHH2i/PpYbg/1DKz+U1V9oLB2gnAb5WUq5Qksf24evxl4zbhCldARjJ/xFNxkXAFDSD2IEa96DLoM3btkdoSey64UYNvDr6pLpB+9oVhipws21WQY6vqdmmBdc+4O3lwiYH0H4psNra0Px2ZqwGPoO3j78xbT9gAJfBDMwjVxYYJ/5O7wPIF1kOdw3yiL/40zOGUrYOxM1x4ZGovAw92R5trMHqn4J+AJTafRPirAOYT0a9RVXnMF0racXPiYn89plppsonxd2aGPikbKDaSi4jxwqed3Y61VR8KIgWRMVLeVlYQIDAQAB
  privateKey: MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDIS3lPdj1IWoDUdjRajVoeCcd6R3X4ofPWlBVLg0cfaL8+lhuD/UMrP5TVX2gsHaCcBvlZSrlCSx/bh6/GXjNuEKV0BGMn/EU3GRcAUNIPYgRr3oMugzdu2R2hJ7LrhRg28OvqkukH72hWGKnCzbVZBjq+p2aYF1z7g7eXCJgfQfimw2trQ/HZmrAY+g7ePvzFtP2AAl8EMzCNXFhgn/k7vA8gXWQ53DfKIv/jTM4ZStg7EzXHhkai8DD3ZHm2sweqfgn4AlNp9E+KsA5hPRr1FVecwXStpxc+Jifz2mWmmyifF3ZoY+KRsoNpKLiPHCp53djrVVHwoiBZExUt5WVhAgMBAAECggEABaEKIgiqUc62Fh6DM7grNCrZgO0qJoJn8MfrMirQnmxEW24W3HCLPS9zi4R7oCmGH3tyUZs0Gh30EYiKeQNhy/Qen8RNrHiKchEv2mTTFf7G3biYeIe0WKaUPrCvxn7oXIcsZKyTvTLyLGEDoJ2FFTEjuJLqIyAtNzX7PGzP0GlGniGpHMUvalYtbdoWvWVbSiPh/17yd3ykwoNSdOv5l3AXb2sqOH/8cWMaYXwVn8mRHNONbFe4Y9dpGBC8jFn5yPcwWwo7FQ/uRIkFde9gDFtcPqDiOMCGEMqqpmYN42UjIh56MjxrLagcS0wiIeAypgI+DnzaNe6F5sLCVP/tQQKBgQD14eyzH5gVjrvVvbZUS9mq3r+jEA5o0qgR4aGszwxBbSZItkcmzf5H1E+Kz8g3IPZlNCCn+h/4QnME60Wpy7NgRvr/iQ8IAeKX+6faSqBdEgSXiw0RwSuYCIne0ArdJhkxOuHAGsae8u4EIej+3KHmRJWTUzW+w3Yqk/z/MIoUoQKBgQDQiVaBeSL0WRHIR3tdWHz7w0q6ESsveucD4DneYkF0gQHDRLBNCyt7CvoHe4gViPMfI5vc0gOhEonNnEyp2STFhw3GQb+1HuWxiOKLznbDxUF++Z6e0ZsK+A6oUE6nIoY+vsKdMKG4K9IhJpHtPE59Unj7x5fAwsR+4UQhleTYwQKBgBtHiIJLBA2IO3C4To1FqQ2bDvnhYyfgD0OEm/JXOk3b9T5l8rjsa8S+WmDVMqpjHtMVmHXqezeI78fg7marMeiBl4FYTHGf++rOwc2nL+mDgTzq8XVB0Dta3yj4PexROMRMexVcIyMpYpzUwkvcYJ3yiAHDXpgeiXKp3ozVbsxhAoGAIVJQqE+a7kBtPvttEvVYw0HpZuHnbKbO0ye5F3fLzbnvdiw7n5PxVq/iU9/BVu+TKZ6fASHtwocbzebzuRAheA6kfNF0uJQ/T6b3zC8pew7B8HAikG4dwBry/KIYb0xs9wm0PznOHYejA/kNyEKiqBPNkS3Ladm1XDDSmitBbgECgYBs23UgDPkKKEj9TH6G4H8yBoRZkZcBOZWKo+xrrQRw6lXpvVCiuqwDoWRZDYriwFC4/ifsBlj/EtnlWZHxZaCQQpNIC/ZZ/LuBumA42XWH8ieSu6FRNw43GHHQ8rV19DXqO4vIZa51een8migtdd0lWoZxKXHNxMnmxUFjHbxpHw==
