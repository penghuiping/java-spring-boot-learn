########################################################
###common
########################################################
app.name=java-spring-boot-learn
app.db.ip=192.168.99.100
app.db.port=30006
app.db.username=test
app.db.password=123456
app.db.name=test

app.rabbitmq.ip=192.168.99.100
app.rabbitmq.port=30002
app.rabbitmq.username=guest
app.rabbitmq.password=guest
app.rabbitmq.virtualHost=/

app.redis.ip=192.168.99.100
app.redis.port=30001
app.redis.db=9

app.filesever.ip=192.168.99.100
app.filesever.nginx.html=/home/joinsoft/html/
app.kong.adminBaseUrl=http://192.168.1.128:32299
app.kong.jwtTokenExpireTime=3600

########################################################
###datasource
########################################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${app.db.ip}:${app.db.port}/${app.db.name}?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=${app.db.username}
spring.datasource.password=${app.db.password}
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#spring.datasource.useGlobalDataSourceStat=true
########################################################
### Java Persistence Api
########################################################
# Specify the DBMS
spring.jpa.database=MYSQL
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.format-sql=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
########################################################
### JMS Rabbitmq
########################################################
spring.rabbitmq.host=${app.rabbitmq.ip}
spring.rabbitmq.port=${app.rabbitmq.port}
spring.rabbitmq.username=${app.rabbitmq.username}
spring.rabbitmq.password=${app.rabbitmq.password}
spring.rabbitmq.virtualHost=${app.rabbitmq.virtualHost}


########################################################
### LOG
########################################################
logging.file=logs/userservice.log
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.com.joinsoft=INFO

########################################################
### static resources and upload load file
########################################################
base_assets_url=http://${app.filesever.ip}/${app.name}/assets/
base_assets_upload_path=${app.filesever.nginx.html}/${app.name}/upload/
base_assets_upload_url=http://${app.filesever.ip}/${app.name}/upload/


########################################################
### redis
########################################################
spring.redis.host=${app.redis.ip}
spring.redis.port=${app.redis.port}
spring.redis.database=${app.redis.db}


########################################################
### jpush
########################################################
MASTER_SECRET_0=
APP_KEY_0=
jiguang.sms.APP_KEY=
jiguang.sms.MASTER_SECRET=

########################################################
### fileupload
########################################################
spring.http.multipart.maxFileSize=10Mb
spring.http.multipart.maxRequestSize=1000Mb

########################################################
### distributed transaction
########################################################
distributed.transaction.rabbitmq.exchange=test-exchange
distributed.transaction.rabbitmq.queues=userservice,notifyservice
distributed.transaction.rabbitmq.targetQueue=userservice
distributed.transaction.enabled=true


